name: Gemini Code Review

on:
  # dev 브랜치로 들어오는 Pull Request 시에만 실행
  pull_request:
    branches: [ dev ]
    types: [ opened, synchronize, reopened ]


jobs:
  code-review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v3

      - name: Install GoogleGenerativeAI
        run: |
          npm install @google/generative-ai

      # PR 이벤트에서의 변경사항 처리
      - name: Get git diff for PR
        run: |
          git fetch origin "${{ github.event.pull_request.base.ref }}"
          git fetch origin "${{ github.event.pull_request.head.ref }}"
          git diff --unified=0 "origin/${{ github.event.pull_request.base.ref }}" > "diff.txt"
          echo "EVENT_TYPE=pull_request" >> $GITHUB_ENV

      # Gemini를 사용한 코드 분석
      - name: Run Gemini-1.5-flash
        id: gemini_review
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const diff_output = fs.readFileSync("diff.txt",'utf8');

            const { GoogleGenerativeAI } = require("@google/generative-ai");
            const genAI = new GoogleGenerativeAI("${{ secrets.GEMINI_API_KEY }}");
            const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash"});            

            // Pull Request 전용 프롬프트
            const prompt = `Explain in korean. You are a senior software engineer and need to perform a code review based on the results of a given git diff. Review the changed code from different perspectives and let us know if there are any changes that need to be made. If you see any code that needs to be fixed in the result of the git diff, you need to calculate the exact line number by referring to the "@@ -0,0 +0,0 @@" part. The output format is \[{"path":"{ filepath }", "line": { line }, "text": { review comment }, "side": "RIGHT"}\] format must be respected.\n<git diff>${diff_output}</git diff>`;

            const result = await model.generateContent(prompt);
            const response = await result.response;
            const text = response.text();
            
            // 원본 응답 저장
            fs.writeFileSync('review_result_original.txt', text);
            
            // JSON 배열만 추출하여 정제
            let cleanedText = text;
            
            // 코드 블록 마커 제거
            cleanedText = cleanedText.replace(/```json/g, '').replace(/```/g, '');
            
            // 앞뒤 텍스트 제거 시도 (JSON 배열만 남기기)
            const jsonMatch = cleanedText.match(/\[\s*\{.*\}\s*\]/s);
            if (jsonMatch) {
              cleanedText = jsonMatch[0];
            }
            
            // 정제된 응답 저장
            fs.writeFileSync('review_result.txt', cleanedText);
            console.log('Review results saved!');
      # 디버그 출력
      - name: Debug review result
        run: |
          echo "===== ORIGINAL REVIEW RESULT ====="
          cat review_result_original.txt
          echo "===== CLEANED REVIEW RESULT ====="
          cat review_result.txt
      # 라인별 리뷰 코멘트 추가
      - name: Format and add PR review comments
        id: store
        run: |
          # JSON 형식 확인
           REVIEW_CONTENT=$(cat review_result.txt)
           echo "Raw content: $REVIEW_CONTENT"
          
           # JSON 유효성 검사
           echo "$REVIEW_CONTENT" | jq . > /dev/null 2>&1
           if [ $? -ne 0 ]; then
             echo "Error: Invalid JSON format in the review result"
             echo "$REVIEW_CONTENT"
             exit 1
           fi
          
           # 이스케이프 처리
           COMMENT=$(echo "$REVIEW_CONTENT" | jq -c .)
           echo "Formatted comment: $COMMENT"
           echo "comment=$COMMENT" >> $GITHUB_OUTPUT

      - name: Add Pull Request Review Comment
        uses: nbaztec/add-pr-review-comment@v1.0.7
        with:
          comments: ${{ steps.store.outputs.comment }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          allow-repeats: false
        env:
          EVENT_TYPE: pull_request